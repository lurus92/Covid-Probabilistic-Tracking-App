"use strict";
const converter_android_1 = require("./converter.android");
const converter_ios_1 = require("./converter.ios");
const data_provider_1 = require("./data.provider");
function getPlatformData(platformData, projectData, platform, injector) {
    if (!platformData) {
        const platformsData = injector.resolve("platformsData");
        platformData = platformsData.getPlatformData(platform, projectData);
    }
    return platformData;
}
module.exports = function (androidResourcesMigrationService, logger, projectData, injector, hookArgs) {
    const platformName = (hookArgs &&
        (hookArgs.platformData && hookArgs.platformData.normalizedPlatformName) ||
        (hookArgs.checkForChangesOpts && hookArgs.checkForChangesOpts.platform) ||
        '').toLowerCase();
    projectData = hookArgs && (hookArgs.projectData || (hookArgs.checkForChangesOpts && hookArgs.checkForChangesOpts.projectData));
    const platformData = getPlatformData(hookArgs && hookArgs.platformData, projectData, platformName, injector);
    let converter;
    const dataProvider = new data_provider_1.DataProvider(logger, projectData);
    if (platformName === "android") {
        converter = new converter_android_1.ConverterAndroid(dataProvider, androidResourcesMigrationService, logger, platformData, projectData);
    }
    else if (platformName === "ios") {
        converter = new converter_ios_1.ConverterIOS(dataProvider, logger, platformData, projectData);
    }
    else {
        logger.warn(`Platform '${platformName}' isn't supported: skipping localization`);
        return;
    }
    converter.run();
};
